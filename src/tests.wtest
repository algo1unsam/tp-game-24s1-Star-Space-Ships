import wollok.game.*
import extras.*
import naves.*
import niveles.*
import pantallas.*
import proyectiles.*

	const marco3 = new Marco(position = game.at(2,3), image = "marco3.png", x1 = 2, x2 = 16)
	const space = new Escenario(escenario = new NivelUno(), position = game.at(2,3), image = "spaceSmall.png", sonidoDeFondo = "track1.mp3" )
	
	const n1 = new Nave1(position=game.at(7,4),jugador=null)
	const n2 = new Nave2(position=game.at(9,4),jugador=null)
	const n3 = new Nave3(position=game.at(11,4),jugador=null)
	
	const marco1 = new Marco(position = game.at(7,4), image = "marco1.png", x1 = 7, x2 = 12)
	const marco2 = new Marco(position = game.at(9,4), image = "marco2.png", x1 = 7, x2 = 12)
	
describe "Modulo 1. Selecci칩n de background y naves" {

	test "Selecci칩n de escenario espacio" {
	
		game.addVisual(space)
		game.addVisual(marco3)
		assert.equals(game.uniqueCollider(marco3),space)
	
	}
	
	test "Selecci칩n de naves" {
		
		game.addVisual(n1)
		game.addVisual(n2)
		game.addVisual(marco1)
		game.addVisual(marco2)
		
		seleccionNaves.escogerNave(marco1)
		seleccionNaves.escogerNave(marco2)
		
		assert.equals(seleccionNaves.escogerNave(marco1),n1)
		assert.equals(seleccionNaves.escogerNave(marco2),n2)
	}
}

describe "Gameplay" {	
	method initialize(){
		//Inicializa jugador 1
		n1.jugador(jugador1)
		jugador1.nave(n1)
		n1.position(game.center())
		game.addVisual(n1)
		
		//Inicializa jugador 2
		n2.jugador(jugador2)
		jugador2.nave(n2)
		n2.position(game.center())
		game.addVisual(n2)
		n2.moverDerecha()
		
		colisiones.validar()
	}
	
	test "nave se queda sin energia"{
		
		n1.disparo1()
		n1.disparo1()
		n1.disparo1()
		n1.disparo1()
		n1.disparo1()
		assert.throwsException({n1.disparo1()})
		assert.equals(jugador1.energia(),0)
		assert.that(jugador1.sinEnergia())
	}
	
	test "nave recibe da침o"{
		const disparoNormal = new Disparo(position=n2.position(),imagen="")
		const disparoFuerte = new DisparoVertical(position=n2.position(),imagen="")
		disparoNormal.haceDanio(jugador2)
		assert.equals(90,jugador2.vidas())
		disparoFuerte.haceDanio(jugador2)
		assert.equals(60,jugador2.vidas())
	}
	
}

